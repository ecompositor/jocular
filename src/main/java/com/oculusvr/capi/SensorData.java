package com.oculusvr.capi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SensorData extends Structure {
  /** Acceleration reading in m/s^2. */
  public OvrVector3f Accelerometer;
  /** Rotation rate in rad/s. */
  public OvrVector3f Gyro;
  /** Magnetic field in Gauss. */
  public OvrVector3f Magnetometer;
  /** Temperature of the sensor in degrees Celsius. */
  public float Temperature;
  /** Time when the reported IMU reading took place, in seconds. */
  public float TimeInSeconds;
  public SensorData() {
    super();
  }
  protected List<? > getFieldOrder() {
    return Arrays.asList("Accelerometer", "Gyro", "Magnetometer", "Temperature", "TimeInSeconds");
  }
  public SensorData(OvrVector3f Accelerometer, OvrVector3f Gyro, OvrVector3f Magnetometer, float Temperature, float TimeInSeconds) {
    super();
    this.Accelerometer = Accelerometer;
    this.Gyro = Gyro;
    this.Magnetometer = Magnetometer;
    this.Temperature = Temperature;
    this.TimeInSeconds = TimeInSeconds;
  }
  public SensorData(Pointer peer) {
    super(peer);
  }
  public static class ByReference extends SensorData implements Structure.ByReference {
    
  };
  public static class ByValue extends SensorData implements Structure.ByValue {
    
  };
}
