package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : /usr/include/stdint.h</i><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class Posef extends Structure {
  /** C type : ovrQuatf */
  public OvrQuaternionf Orientation;
  /** C type : ovrVector3f */
  public OvrVector3f Position;

  public Posef() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("Orientation", "Position");
  }

  /**
   * @param Orientation
   *          C type : ovrQuatf<br>
   * @param Position
   *          C type : ovrVector3f
   */
  public Posef(OvrQuaternionf Orientation, OvrVector3f Position) {
    super();
    this.Orientation = Orientation;
    this.Position = Position;
  }

  public Posef(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends Posef implements Structure.ByReference {

  };

  public static class ByValue extends Posef implements Structure.ByValue {
    public ByValue() {
      super();
    }
    public ByValue(Posef pose) {
      super(pose.Orientation, pose.Position);
    }
  };
}
