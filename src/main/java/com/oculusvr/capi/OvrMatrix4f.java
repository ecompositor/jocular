package com.oculusvr.capi;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : /usr/include/stdint.h</i><br>
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class OvrMatrix4f extends Structure {
  /** C type : float[4][4] */
  public float[] M = new float[((4) * (4))];

  public OvrMatrix4f() {
    super();
  }

  @Override
  protected List<?> getFieldOrder() {
    return Arrays.asList("M");
  }

  /**
   * @param M
   *          C type : float[4][4]
   */
  public OvrMatrix4f(float M[]) {
    super();
    if ((M.length != this.M.length))
      throw new IllegalArgumentException("Wrong array size !");
    this.M = M;
  }

  public OvrMatrix4f(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends OvrMatrix4f implements Structure.ByReference {

  };

  public static class ByValue extends OvrMatrix4f implements Structure.ByValue {
    public ByValue() {
    }

    public ByValue(OvrMatrix4f m) {
      super(m.M);
    }

  };
}
