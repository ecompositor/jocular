package com.oculusvr.capi;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br>
 * For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class DistortionVertex extends Structure {
  /** [-1,+1],[-1,+1] over the entire framebuffer. */
  public OvrVector2f ScreenPosNDC;
  /** Lerp factor between time-warp matrices. Can be encoded in Pos.z. */
  public float TimeWarpFactor;
  /** Vignette fade factor. Can be encoded in Pos.w. */
  public float VignetteFactor;
  public OvrVector2f TanEyeAnglesR;
  public OvrVector2f TanEyeAnglesG;
  public OvrVector2f TanEyeAnglesB;

  public DistortionVertex() {
    super();
  }

  protected List<?> getFieldOrder() {
    return Arrays.asList("ScreenPosNDC", "TimeWarpFactor", "VignetteFactor", "TanEyeAnglesR", "TanEyeAnglesG",
        "TanEyeAnglesB");
  }

  public DistortionVertex(OvrVector2f ScreenPosNDC, float TimeWarpFactor, float VignetteFactor,
      OvrVector2f TanEyeAnglesR, OvrVector2f TanEyeAnglesG, OvrVector2f TanEyeAnglesB) {
    super();
    this.ScreenPosNDC = ScreenPosNDC;
    this.TimeWarpFactor = TimeWarpFactor;
    this.VignetteFactor = VignetteFactor;
    this.TanEyeAnglesR = TanEyeAnglesR;
    this.TanEyeAnglesG = TanEyeAnglesG;
    this.TanEyeAnglesB = TanEyeAnglesB;
  }

  public DistortionVertex(Pointer peer) {
    super(peer);
  }

  public static class ByReference extends DistortionVertex implements Structure.ByReference {

  };

  public static class ByValue extends DistortionVertex implements Structure.ByValue {

  };
}
